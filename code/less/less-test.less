@import "less-模块代码.less";

@var: 0;
.class {
  @var: 1;
  .brass {
    @var: 2;
    height: @var; //3 less里变量都是延迟加载，它会把作用域里的东西全部解析完再看这个变量是什么
    @var: 3;
  }
  width: @var; //1 less里的变量都是块级作用域，一个括号代表一个作用域
}

//混合：就是将一系列属性从一个规则集引入到另一个规则集的方式
.my-mixin() {
  //定义混合函数的时候后面加括号使得这个函数不输出到CSS文件中
  color: black;
}
.class1 {
  .my-mixin();
}

.my-mixin1(@w:50px,@h:30px) {
  //设置默认值后下面没传对应的参数就不会报错
  width: @w;
  height: @h;
}
#wrap {
  .inner {
    // .my-mixin1(100px,200px);
    //.my-mixin1(100px); //实参和行参没对上就报错
    //.my-mixin1(100px); //这里默认是改变第一个参数
    .my-mixin1(@h:100px); //指定实参是给谁的
  }
}

.tra {
  // .triangle();
  .triangle(R,40px,pink);
}

.border(@w,@style,@c) {
  border: @arguments //相当于@w @style @c
;
}
.class2 {
  .border(1px,solid,black);
  width: 100+100px; //计算的双方只需要一方带单位
}

.container {
  width: 800px;
  // height: 400px;
  border: 10px solid black;
  display: flex;

  .common() {
    width: 200px;
    height: 100px;
  }
  #b1 {
    .common();
    background-color: green;
    flex: 0 1 100px;
  }
  #b2 {
    .common();
    background-color: chocolate;
    // flex: 1 0 100px;
  }
  #b3 {
    .common();
    background-color: brown;
    // flex: 1 0 100px;
  }
}

.container2 {
  width: 340px;
  height: 340px;
  border: chocolate 4px solid;
  position: relative;
  margin: 10px auto;
  // > .inner2 {
  //   &:nth-child(1) {
  //     .middle(200px,200px,blue);
  //   }
  //   &:nth-child(2) {
  //     .middle(100px,100px,rgb(255, 0, 170));
  //   }
  // }
  // .inner2:extend(.middle2) {
  .inner2 {
    &:extend(.middle2
      all); //把相关与.middle2的都拿过来（文档里说的复制一份把匹配部分都替换成.inner2）
    &:nth-child(1) {
      width: 200px;
      height: 200px;
      background-color: blue;
    }
    &:nth-child(2) {
      width: 100px;
      height: 100px;
      background-color: orange;
    }
  }
}
.container3 {
  width: ~"calc(100px + 100px)";
  height: 10 * 10px;
  border: 10px orchid solid;
}
